#-----------------------------------------------------------------------#
# Physics:                                                              #
#-----------------------------------------------------------------------#

#### Project:
Project = NS_NS_binary_initial_data

#### NS-NS binary:
SNS_separation                  = 50.
SNS_angular_velocity            = auto
SNS_start_off                   = parameter_file
SNS_observe_ADM_P               = S_obj1+S_obj2,default
SNS_observe_ADM_J               = S_obj1+S_obj2,default
SNS_P_ADM_control_method        = adjust(x_CM,y_CM)
SNS_P_ADM_control_update_weight = 0.(x10)->0.2
SNS_P_ADM_control_tolerance     = 1E-8
SNS_P_ADM_control_threshold     = 10


#### NS1:
NS1_baryonic_mass               = 1.4
NS1_EoS_description             = K96
NS1_EoS_type                    = polytropic
NS1_EoS_unit                    = geo
NS1_EoS_K0                      = [96.7]
NS1_EoS_Gamma                   = [2]
NS1_Omega_x             	= 0.
NS1_Omega_y                     = 0.
NS1_Omega_z                     = 0.

NS1_surface_type                = perfect_s2->topology_s2
NS1_surface_finder              = bisection
NS1_surface_change_threshold    = 0.0
NS1_surface_Ylm_max_l           = 10
NS1_enthalpy_allowed_residual   = 1E-8
NS1_enthalpy_update_weight      = 0.5 ## aggressive update!
NS1_Euler_const_criteria        = fix_baryonic_mass
NS1_Euler_const_update_weight   = 1.
NS1_force_balance_equation      = none(x4)->adjust(d/dy:Omega)
NS1_force_balance_update_weight = 0.2
NS1_adjust_center_method        = taylor_expansion
NS1_adjust_center_update_weight = 1.
NS1_extrapolate_matter_fields   = inverse_r_expmr
NS1_Eq_phi_polish               = 0.1
NS1_start_off                   = TOV

#### NS2:
NS2_baryonic_mass               = 1.4
NS2_EoS_description             = K96
NS2_EoS_type                    = polytropic
NS2_EoS_unit                    = geo
NS2_EoS_K0                      = [96.7]
NS2_EoS_Gamma                   = [2]
NS2_Omega_x             	= 0.
NS2_Omega_y                     = 0.
NS2_Omega_z                     = 0.
NS2_surface_type                = perfect_s2->topology_s2
NS2_surface_finder              = bisection
NS2_surface_change_threshold    = 0.0
NS2_surface_Ylm_max_l           = 10
NS2_enthalpy_allowed_residual   = 1E-8
NS2_enthalpy_update_weight      = 0.5 ## aggressive update!
NS2_Euler_const_criteria        = fix_baryonic_mass
NS2_Euler_const_update_weight   = 1.
NS2_force_balance_equation      = none(x4)->adjust(d/dy:Omega)
NS2_force_balance_update_weight = 0.2
NS2_adjust_center_method        = taylor_expansion
NS2_adjust_center_update_weight = 1.
NS2_extrapolate_matter_fields   = inverse_r_expmr
NS2_Eq_phi_polish               = 0.1
NS2_start_off                   = TOV

#### system:
SYS_initialize        = TOV+TOV
SYS_initialize_fields = XCTS

#### free data
Free_data_conformal_metric             = flat
Free_data_conformal_Christoffel_symbol = flat
Free_data_conformal_Ricci              = flat
Free_data_trK                          = zero

#### ADM:
ADM_constraints_method     = from_scratch
ADM_B1I_form               = inspiral
ADM_compute_adm_Kuu_method = use_AIJ

#### stress energy tensor:
Tij_NS_decomposition = XCTS
Tij_NS_gConf         = general

#-----------------------------------------------------------------------#
# Settings:                                                             #
#-----------------------------------------------------------------------#

#### checkpoint:
checkpoint_every = 0h

#### basics:
Derivative_Method               = Spectral
Interpolation_Method            = Spectral
Fourier_Transformation_Method   = RFT 
dF/du_for_Newton_Method         = Spectral 

#-----------------------------------------------------------------------#
# Grid and Geometry:                                                    #
#-----------------------------------------------------------------------#

#### grid:
grid_kind                     = SplitCubedSpherical(NS+NS)
grid_set_NS1                  = left
grid_set_NS2                  = right
grid_NS1_central_box_length   = auto # ~ 20% of the TOV isotropic radius
grid_NS2_central_box_length   = auto # ~ 20% of the TOV isotropic radius
grid_outermost_radius         = 1E5
grid_verbose                  = no

#### resolutions:
n_a = 10(x80)->12(x60)->14(x50)->16(x50)->18(x50)#->20(x50)->22(x50)->24(x40)
n_b = 10(x80)->12(x60)->14(x50)->16(x50)->18(x50)#->20(x50)->22(x50)->24(x40)
n_c = 12(x80)->14(x60)->16(x50)->18(x50)->20(x50)#->22(x50)->24(x50)->26(x40)

grid_SplitCS_max_n_a         = 40
grid_SplitCS_max_n_b         = 40
grid_SplitCS_max_n_c         = 40

#-----------------------------------------------------------------------#
# Equations and Solve:                                                  #
#-----------------------------------------------------------------------#

#### what and where to solve:
Eq_type                         = Elliptic
Eq_elliptic_test                = no

Eq_phi1                         = XCTS_curve_Type3_DDM, NS1
Eq_alias_field_phi1             = phi
Eq_phi2                         = XCTS_curve_Type3_DDM, NS2
Eq_alias_field_phi2             = phi
Eq_psi                          = XCTS_curve_excision_Type1_DDM, .*
Eq_alphaPsi                     = XCTS_curve_excision_Type2_DDM, .*
Eq_B0_U0                        = XCTS_flat_excision_Type1_DDM, .*
Eq_B0_U1                        = XCTS_flat_excision_Type1_DDM, .*
Eq_B0_U2                        = XCTS_flat_excision_Type1_DDM, .*
Eq_update_method                = relaxed_scheme
Eq_update_weight_phi1           = 0.2
Eq_update_weight_phi2           = 0.2
Eq_update_weight_psi            = 0.2
Eq_update_weight_alphaPsi       = 0.2
Eq_update_weight_B0_U0          = 0.2
Eq_update_weight_B0_U1          = 0.2
Eq_update_weight_B0_U2          = 0.2

#### solve settings:
solve_Order                     = phi1,phi2,psi,alphaPsi,B0_U0,B0_U1,B0_U2
solve_Newton_Update_Weight      = 1.
solve_residual                  = 1E-10
solve_residual_factor           = 1E-5
solve_Max_Iteration             = 1
solve_Max_Newton_Step           = 1
solve_Method                    = DDM_Schur_Complement
solve_UMFPACK_refinement_step   = 0
solve_UMFPACK_size              = 1

#-----------------------------------------------------------------------#
# Print:                                                                #
#-----------------------------------------------------------------------#

#### outputs: (regular expression is supported)
txt_output_0d  = ham,mom,eq_residual

#txt_output_1d  = ^phi, ^psi, ^alphaPsi, ^B0, ^beta, eq_residual,\
#	         ham, mom, enthalpy, rho0, ^drho0_D.,\
#		 d+phi_D.+, d+psi_D.+, d+alphaPsi_D.+, d+B._U.D.+

## lines separated with ',' and the fix values take place in [0,1]x[0,1]
#txt_output_1d_line = (X,0.5,0.5),(0.5,Y,0.5),(0.5,0.5,Z)

#silo_output_3d = ^phi,^psi,^alphaPsi,^B0,^beta,eq_residual,\
#                 ham,mom,(dphi_D0,dphi_D1,dphi_D2),\
#                 enthalpy,rho0,(drho0_D0,drho0_D1,drho0_D2),\
#                 drho0_D0,drho0_D1,drho0_D2,\
#	         (B0_U0,B0_U1,B0_U2),(beta_U0,beta_U1,beta_U2)

#-----------------------------------------------------------------------#
# The End                                                               #
#-----------------------------------------------------------------------#
